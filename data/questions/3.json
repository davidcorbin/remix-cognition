[
  {
    "text" : "How many constructors can a class have",
    "answers" : [
      "Infinitely many overloaded constructors",
      "One, only the default constructor",
      "Two, the default constructor and some overloaded constructor",
      "Zero, classes don't have constructors, only objects do."
    ]
  },
  {
    "text" : "How many constructors does a class NEED to have",
    "answers" : [
      "Zero, the class does not necessarily have to create an object",
      "One, only the default constructor",
      "Two, the default constructor and some overloaded constructor",
      "Three, the default constructor some overloaded constructor and a super constructor"
    ]
  },
  {
    "text" : "What is the constructor that does not have any parameters and sets the class variables to their default value",
    "answers" : [
      "The default constructor",
      "The overloaded constructor",
      "The abstract constructor",
      "The super constructor"
    ]
  },
  {
    "text" : "Which of the following is a valid constructor",
    "answers" : [
      "public Square()",
      "private void Square()",
      "const Square()",
      "static void Square()"
    ]
  },
  {
    "text" : "Which of the following is an invalid comparison",
    "answers" : [
      "\"string1\" == \"string2\"",
      "7 == 7",
      "object1.equals(object2)",
      "1.7 < 15"
    ]
  },
  {
    "text" : "In Java, strings can be correctly compared with either == or .equals()",
    "answers" : [
      "False",
      "True"
    ]
  },
  {
    "text" : "What happens when you print an object",
    "answers" : [
      "Its toString method is called",
      "Its memory location is printed",
      "Its reference number is printed",
      "All of its fields are printed"
    ]
  }
]
